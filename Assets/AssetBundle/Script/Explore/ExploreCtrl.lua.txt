ExploreCtrl = {}

ExploreCtrl.Panel = nil
ExploreCtrl.Scene = nil
ExploreCtrl.selectedTroop = 1 -- 1 、2 当前选择的队伍
ExploreCtrl.selectedRole = 0 -- 4 - 7 当前选择的头像在buttons中的index
ExploreCtrl.data = {} -- 数组形式四个角色id
ExploreCtrl.core = nil

function ExploreCtrl:Init()
    print("进入探索")

    self.core = CS.UnityEngine.Object.FindObjectOfType(typeof(CS.Core))

    self.core:LoadScene(
        "Explore",
        function()
            self.Panel = LoadManager:Load(ABManager:LoadAsset("prefab", "ExploreUI"), "UI", true).transform:GetChild(0):GetComponent("UISubObject")
            self.Scene = CS.UnityEngine.GameObject.Find("/Explore/CityPlane/Canvas"):GetComponent("UISubObject")

            -- 注册返回委托
            self.Panel.buttons[1].onClick:AddListener(
                function()
                    if not ExploreCtrl.Panel.go[0].activeSelf then
                        UICtrl:Back2MainScene()
                    end
                end
            )
            local turn = function()
                self:TurnTroops()
            end
            -- 添加切换编队委托
            self.Panel:GetComponent("ExploreAnimate").turnTroops = turn
            -- 添加左右切换编队按钮委托
            self.Panel.buttons[2].onClick:AddListener(turn)
            self.Panel.buttons[3].onClick:AddListener(turn)

            -- 添加按钮委托
            for i = 0, self.Scene.buttons.Length - 1 do
                ExploreCtrl.Scene.buttons[i].onClick:AddListener(
                    function()
                        ExploreCtrl:InMap(i)
                    end
                )
            end

            -- 添加点击角色头像委托
            for i = 4, 7 do
                self.Panel.buttons[i].onClick:AddListener(
                    function()
                        -- 若当前选择不等于i则切换到当前
                        if self.selectedRole ~= i then
                            if self.selectedRole >= 4 and self.selectedRole <= 7 then
                                CS.DG.Tweening.DOTweenModuleUI.DOFade(self.Panel.buttons[self.selectedRole]:GetComponent("Image"), 0.3, 0.15)
                            end
                            self.selectedRole = i
                            CS.DG.Tweening.DOTweenModuleUI.DOFade(self.Panel.buttons[self.selectedRole]:GetComponent("Image"), 0.6, 0.15)
                        end
                    end
                )
            end
            self.Panel.buttons[4].onClick:Invoke()

            -- 点击编队
            self.Panel.buttons[0].onClick:AddListener(
                function()
                    ExploreCtrl:Display()
                end
            )
            -- 亮屏
            UICtrl:BlackMaskAni(0, 0.5)

            -- 刷新两个编队 角色表
            self:LoadData()
            self:Display()
        end
    )

    MainSceneCtrl.Scene.gameObject:SetActive(false)
end

-- 加载所需数据
function ExploreCtrl:LoadData()
    ModelTool:SetMeta(PlayerDataModel.PlayerData.Troops)
end

-- 刷新左边头像
function ExploreCtrl:DisplayLeft()
    local data = ModelTool:SplitStr(PlayerDataModel.PlayerData.Troops[self.selectedTroop])
    -- 显示8个在队伍中的头像
    for i = 1, 4 do
        local texture = ABManager:LoadAsset("texture", data[i] .. "_Icon", CS.UnityEngine.Sprite)
        self.Panel.images[i - 1].sprite = texture
        self.Panel.images[i + 3].sprite = texture
    end
end

-- 刷新右边编队 角色表
function ExploreCtrl:Display()
    -- 数组形式四个角色ID
    self.data = ModelTool:SplitStr(PlayerDataModel.PlayerData.Troops[self.selectedTroop])

    -- 显示8个在队伍中的头像
    for i = 1, 4 do
        local texture = ABManager:LoadAsset("texture", self.data[i] .. "_Icon", CS.UnityEngine.Sprite)
        self.Panel.images[i - 1].sprite = texture
        self.Panel.images[i + 3].sprite = texture
    end
    -- 加载未在队伍中的角色
    local roleData = {}
    for k, v in pairs(PlayerDataModel.PlayerData.Heros) do
        local different = true
        for i = 1, 4 do
            if v.HeroID == self.data[i] then
                different = false
                break
            end
        end
        if different then
            table.insert(roleData, PlayerDataModel.PlayerData.Heros[k]) -- 得到所有不在编队中的ID
        end
    end
    -- 销毁
    local parent = self.Panel.go[19].transform
    for i = 0, parent.childCount - 1 do
        CS.UnityEngine.Object.Destroy(parent:GetChild(i).gameObject)
    end
    -- 加载
    for k, v in pairs(roleData) do
        local image = LoadManager:Load2Pos(ABManager:LoadAsset("prefab", "Button"), self.Panel.go[19].transform):GetComponent("Image")
        image.sprite = ABManager:LoadAsset("texture", v.HeroID .. "_Icon", CS.UnityEngine.Sprite)
        image:GetComponent("RectTransform").localPosition = CS.UnityEngine.Vector3.zero
        -- 添加成员改变委托
        image:GetComponent("Button").onClick:AddListener(
            function()
                ExploreCtrl:ChangeRole(v.HeroID)
            end
        )
    end

    -- 刷新队伍名称和三项属性
end

-- 切换编队
function ExploreCtrl:TurnTroops()
    -- Lua通用三目运算符形式
    self.selectedTroop = (self.selectedTroop == 1 and {2} or {1})[1]
    print("切换到" .. self.selectedTroop .. "编队")
    -- 刷新显示
    if ExploreCtrl.Panel.go[0].activeSelf then
        self:Display()
    else
        self:DisplayLeft()
    end
end

-- 点击角色头像换编队
function ExploreCtrl:ChangeRole(ID)
    self.data[ExploreCtrl.selectedRole - 3] = ID
    -- 修改数据
    PlayerDataModel.PlayerData.Troops[self.selectedTroop] = ModelTool:MergeStr(self.data[1], self.data[2], self.data[3], self.data[4])
    -- 写入数据
    PlayerDataModel:WriteIn()
    -- 读取数据
    PlayerDataModel:ReadOut()

    ExploreCtrl:Display()
end

-- 进入大地图
function ExploreCtrl:InMap(i)
    -- 转场
    Core.timer = 0.5
    Core.timerEvent = function()
        UICtrl:BlackMaskAni(
            1,
            0.5,
            function()
                -- 销毁UI
                UICtrl:DestroyOthers()
                -- 进入探索场景，根据名称旋转摄像机角度
                self.core:LoadScene(
                    "ExploreIn",
                    function()
                        LoadManager:LoadLua("Explore", "MapCtrl")
                        MapCtrl:Init(i)
                        UICtrl:BlackMaskAni(0, 0.5)
                    end
                )
            end
        )
    end
end
