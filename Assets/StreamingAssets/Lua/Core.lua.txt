require("ABManager.lua.txt")
require("LoadManager.lua.txt")
require("UICtrl.lua.txt")
require("ModelTool.lua.txt")

require("PlayerDataModel.lua.txt")
require("StaticDataModel.lua.txt")

JsonUtil = require("JsonUtil.lua.txt")

--可以运行从AB包中加载出的脚本
--CS.Luax.Instance:DoString("print('666')")

-- 手动加载依赖

Core = {}

function Core.Start()
    -- 加载启动界面
    LoadManager:LoadSystem("GameStart")
end

Core.GamePeriod = 1800 * 0.1
-- 计时委托
Core.timer = 0
Core.timerEvent = nil
-- 倒计时
Core.countDown = 0
Core.cdEvent = nil
Core.DayState = 1

local dayTimer = 0
local NpcTimer = 0
local NpcMinTime = 20 * 0.1
local NpcMaxTime = 30 * 0.1

--每帧刷新
function Core.Update()
    --print("lua update")
    -- 时间到执行委托
    if Core.timer > 0 and Core.timerEvent ~= nil then
        Core.timer = Core.timer - CS.UnityEngine.Time.deltaTime
        if Core.timer <= 0 then
            Core.timerEvent()
            Core.timerEvent = nil
        end
    end

    -- 倒计时中执行委托
    if Core.countDown > 0 and Core.cdEvent ~= nil then
        Core.countDown = Core.countDown - CS.UnityEngine.Time.deltaTime
        Core.cdEvent()
        if Core.countDown < 0 then
            Core.cdEvent = nil
        end
    end

    dayTimer  = dayTimer + CS.UnityEngine.Time.deltaTime
    if dayTimer >= Core.GamePeriod/2 then
        Core.DayState = Core.DayState * -1
        NpcTimer = 0
    end




end

--每秒刷新
function Core.SecondUpdate()
    NpcTimer = dayTimer + 1
    if NpcTimer >= NpcMinTime then
        local r = math.random(10)
        print(r)
        if r == 10 or NpcTimer >= NpcMaxTime then
            -- 触发npc来购买的事件
            NpcTimer = 0
        end
    end
end
