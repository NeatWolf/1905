GameStartCtrl = {}

GameStartCtrl.Panel = nil

-- 加载登录系统
function GameStartCtrl:Init()
    self.Panel = LoadManager:Load(ABManager:LoadAsset("prefab", "LoginTest"), "UI", true):GetComponent("UISubObject")

    local file = io.open(PlayerDataModel.FilePath)
    if file then
        local str = CS.System.IO.File.ReadAllText(PlayerDataModel.FilePath)
        local playerData = JsonUtil.decode(str)
        if playerData.UserName ~= nil then
            self.Panel.inputFields[0].text = playerData.UserName
            self.Panel.inputFields[1].text = playerData.UserPassword
        end
    else
        self.Panel.inputFields[0].text = "11111111166"
        self.Panel.inputFields[1].text = "123"
    end

    local loginCtrl = CS.UnityEngine.Object.FindObjectOfType(typeof(CS.LoginCtrl))
    if loginCtrl == nil then
        loginCtrl = CS.UnityEngine.GameObject():AddComponent(typeof(CS.LoginCtrl))
    end

    self.Panel.buttons[0].onClick:AddListener(
        function()
            loginCtrl:LoginClick(self, self.Panel.inputFields[0].text, self.Panel.inputFields[1].text, self.Panel.gameObject)
        end
    )
end

--[[
    @desc: 登陆成功
]]
function GameStartCtrl:LoginSuccess()
    -- 黑遮罩淡入出
    UICtrl:CutTo(
        1,
        function()
            CS.UnityEngine.Object.Destroy(GameStartCtrl.Panel.gameObject)
            GameStartCtrl:LoadingBar()
        end
    )
end

-- 登录成功，加载进度条，加载所有数据
function GameStartCtrl:LoadingBar()
    -- 加载 进度条
    local LoadingPanel = LoadManager:Load(ABManager:LoadAsset("prefab", "LoadingProcess"), "UI", true):GetComponent("UISubObject")
    local barImage = LoadingPanel.images[0]
    Core.countDown = 1
    local time = Core.countDown
    Core.cdEvent = function()
        barImage.fillAmount = 1 - Core.countDown / time
        if barImage.fillAmount == 1 then
            -- 加载完成
            -- 进入游戏主场景，销毁不需要的UI
            -- 读取主场景脚本，清除GameStartCtrl占用
            LoadManager:LoadSystem("MainScene")
            UICtrl:BlackMaskAni(
                1,
                0.5,
                function()
                    CS.UnityEngine.Object.Destroy(LoadingPanel.gameObject)
                    -- 切换到空场景
                end
            )

            GameStartCtrl = nil
        end
    end

    PlayerDataModel:Init()
    -- 加载 静态数据策划表
    StaticDataModel:ReadOut()
    -- 加载 玩家的本地数据，并合并成完整数据
    PlayerDataModel:ReadOut()

    for k, v in pairs(PlayerDataModel.CompletePlayerData.SynInsInfo.SynItems) do
        Core.updateEvent["UpdateSynTime" .. v.ItemID] = function()
            self:UpdateSynTime(v)
        end
    end
end

function GameStartCtrl:UpdateSynTime(itemData)
    itemData.SynTimer = tostring(itemData.SynTimer + 0.001)
    --CS.UnityEngine.Time.deltaTime)
    if tonumber(itemData.SynTimer) >= tonumber(itemData.SynTime) then
        Core.updateEvent["UpdateSynTime" .. itemData.ItemID] = nil
        PlayerDataModel:RemoveSynItem(itemData.ItemID)
        PlayerDataModel:AddNormalItem(itemData.ItemID, 1, false)
    end
end
