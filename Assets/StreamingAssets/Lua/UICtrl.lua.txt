UICtrl = {}

UICtrl.blackMask = nil

-- 镜头黑遮罩动画,目标透明度、时间、[委托]
function UICtrl:BlackMaskAni(alpha, time, event)
    if self.blackMask == nil then
        self.blackMask = CS.UnityEngine.GameObject.Find("UI/CameraMask/Panel"):GetComponent("Image")
    end
    if event then
        CS.DG.Tweening.DOTweenModuleUI.DOFade(self.blackMask, alpha, time).onComplete = event
    else
        CS.DG.Tweening.DOTweenModuleUI.DOFade(self.blackMask, alpha, time)
    end
end

-- 淡入淡出过场
-- time：float：总时间
-- event：委托
-- delay: 延迟执行
function UICtrl:CutTo(time, event, delay)
    if delay == nil then
        UICtrl:BlackMaskAni(
            1,
            time * 0.5,
            function()
                event()
                UICtrl:BlackMaskAni(0, time * 0.5)
            end
        )
    else
        Core.timer = delay
        Core.timerEvent = function()
            UICtrl:BlackMaskAni(
                1,
                time * 0.5,
                function()
                    event()
                    UICtrl:BlackMaskAni(0, time * 0.5)
                end
            )
        end
    end
end

--[[
    @desc: 弹窗管理
    author:{author}
    time:2019-08-11 16:40:23
    @return:
]]
function UICtrl:Pop()
end

--[[
    @desc: 退出弹窗
    author:{author}
    time:2019-08-11 21:19:15
    @return:
]]
function UICtrl:Back()
end

--[[
    @desc: 返回主场景
    author:{author}
    time:2019-08-11 21:19:58
    @return:
]]
function UICtrl:Back2MainScene()
    UICtrl:CutTo(
        0.5,
        function()
            CS.UnityEngine.SceneManagement.SceneManager.LoadScene("Empty")

            -- 销毁除MainSceneUI以外的组件
            UICtrl:DestroyOthers()
            ABManager:LoadAtlas()

            -- 激活主场景
            MainSceneCtrl:ShowMainScene()
        end
    )
end

-- 销毁除MainSceneUI以外的组件
function UICtrl:DestroyOthers()
    if LoadManager.findedParents["UI"] == nil then
        LoadManager.findedParents["UI"] = CS.UnityEngine.GameObject.Find("UI")
    end
    for i = 0, LoadManager.findedParents["UI"].transform.childCount - 1 do
        local go = LoadManager.findedParents["UI"].transform:GetChild(i)
        if go.name ~= "MainSceneUI" and go.name ~= "CameraMask" then
            CS.UnityEngine.Object.Destroy(go.gameObject)
        end
    end
end

--[[
    @desc: 显示英雄列表
    --@rolesList: 英雄信息数组
	--@parent: 父物体
--]]
function UICtrl:LoadRole(rolesList, parent)
    -- 根据PlayerDataModel.CompletePlayerData加载Role预制体
    for k, v in pairs(rolesList) do
        local _Role = {}
        _Role.UISub = LoadManager:Load2Pos(ABManager:LoadAsset("prefab", "Role"), parent):GetComponent("UISubObject")
        -- 加载图片
        _Role.UISub.images[0].sprite = ABManager:LoadAsset("texture", v.HeroID .. "_Icon", CS.UnityEngine.Sprite)
        _Role.UISub:GetComponent("RectTransform").localPosition = CS.UnityEngine.Vector3.zero
    end
end

function UICtrl:LoadItem(itemData, parent, clickEvent)
    local _Item = {}
    _Item.Obj = LoadManager:Load2Pos(ABManager:LoadAsset("prefab", "Button"), parent)
    _Item.UISub = _Item.Obj:GetComponent("UISubObject")
    _Item.Data = ModelTool:CopyTable(itemData)
    _Item.UISub.images[0].sprite = ABManager:LoadAsset("texture", _Item.Data.ItemID, CS.UnityEngine.Sprite)
    _Item.UISub.images[0].rectTransform.localPosition = CS.UnityEngine.Vector3.zero
    if _Item.Data.Count ~= nil and _Item.Data.Count ~= "1" then
        _Item.UISub.texts[0].text = _Item.Data.Count
    else
        _Item.UISub.texts[0].text = ""
    end
    if clickEvent ~= nil then
        _Item.UISub.buttons[0].onClick:AddListener(clickEvent)
    end
    return _Item
end


function UICtrl:LoadWarning(parent, message, callback)
    local _Warning = {}
    _Warning.Obj  = LoadManager:Load(ABManager:LoadAsset("prefab", "Warning"), parent, true)
    _Warning.UISub = _Warning.Obj:GetComponent("UISubObject")

    _Warning.UISub.tmps[0].text = message
    _Warning.UISub.buttons[0].onClick:AddListener(
        function()
            CS.UnityEngine.Object.Destroy(_Warning.Obj)
        end
    )

    if callback ~= nil then
        _Warning.UISub.buttons[0].onClick:AddListener(callback)
    end
    
    return _Warning.Obj
end

function UICtrl:LoadNetworking(open)
    if open == true then
        LoadManager:Load(ABManager:LoadAsset("prefab", "Networking"), "UI", true)
    else
        CS.UnityEngine.Object.Destroy(CS.UnityEngine.GameObject:Find("Networking"))
    end
end

