LotteryCtrl = {}
-- 预制体上的UISubObject脚本，内含所有UI对象
LotteryCtrl.Panel = nil

function LotteryCtrl:Init()
    print("进入抽奖")
    LoadManager:LoadLua("Lottery", "LotteryModel")
    LotteryCtrl.Panel = LoadManager:Load(ABManager:LoadAsset("prefab", "LotteryUI"), "UI", true):GetComponent("UISubObject")
    -- 注册委托
    LotteryCtrl.Panel.buttons[0].onClick:AddListener(
        function()
            UICtrl:Back2MainScene()
        end
    )
    LotteryCtrl.Panel.buttons[1].onClick:AddListener(
        function()
            LotteryCtrl:Lottery("Normal")
        end
    )
    LotteryCtrl.Panel.buttons[2].onClick:AddListener(
        function()
            LotteryCtrl:Lottery("NormalPlus")
        end
    )

    -- 刷新数据，显示能否抽卡
    LotteryCtrl:DisplayInfo()

    -- 无事抽一发------------------------
    -- for i = 1, 1000 do
    --     self:Lottery("Normal")
    -- end
end

-- 抽卡。type（string）：卡池(Normal\NormalPlus\Diamond\DiamondPlus)
function LotteryCtrl:Lottery(type)
    -- 显示抽卡UI效果

    -- 扣除资源
    LotteryModel:DeductAsset(type)

    self.Panel:GetComponent("LotteryAnimation").lotteryOutEvent = function()
        -- 下方扭蛋归位
        for i = 1, LotteryModel[type].times do
            LotteryCtrl:Get(type)
        end
        LotteryCtrl:DisplayInfo()
    end

end

-- 刷新数据，显示能否抽卡
function LotteryCtrl:DisplayInfo()
    LotteryCtrl.Panel.buttons[1].interactable = LotteryModel:Inquire("Normal")
    LotteryCtrl.Panel.buttons[2].interactable = LotteryModel:Inquire("NormalPlus")
    LotteryCtrl.Panel.tmps[0].text = PlayerDataModel.PlayerData.Money
    LotteryCtrl.Panel.tmps[1].text = PlayerDataModel.PlayerData.Diamond
end

-- 抽取
function LotteryCtrl:Get(type)
    -- 计算概率，抽卡
    if CS.UnityEngine.Random.value < LotteryModel[type].roleProbability then
        -- 抽到角色
        local roleData = StaticDataModel:RandomTable(StaticDataModel.HerosTable)

        if StaticDataModel:Exist(PlayerDataModel.PlayerData.Heros, "HeroID", roleData.HeroID) then
            -- 抽到弹窗
            UICtrl:LoadRole({roleData}, LotteryCtrl:Show(roleData.Name .. "(已拥有,转换为卷轴)"))

            -- 卷轴添加账号数据
            PlayerDataModel:AddItem("10003")

            -- 转换成卷轴，显示转换成卷轴文字
            print("重复获得" .. roleData.Name .. "转换成卷轴")
        else
            -- 显示抽到角色UI效果
            UICtrl:LoadRole({roleData}, LotteryCtrl:Show(roleData.Name))

            print(roleData.Name)

            -- 角色添加到账号数据
            LotteryModel:AddRole(roleData)
        end
    else
        -- 显示获得物品
        local prop = LotteryModel:LotteryProp(type)
        prop.Count = ""

        -- 显示抽到道具UI效果
        UICtrl:LoadItem(prop, LotteryCtrl:Show(prop.Name))

        print("获得L" .. prop.Level .. "道具:" .. prop.Name)

        -- 道具添加到账号数据
        PlayerDataModel:AddItem(prop.ItemID)
    end

    -- 保存账号数据，重新合并数据，刷新资源显示
    PlayerDataModel:WriteIn()
    PlayerDataModel:ReadOut()
end

-- 弹窗显示抽到的物品,传要显示的文字,返回可以加载图标的父物体
function LotteryCtrl:Show(name)
    local subPanel = LoadManager:Load(ABManager:LoadAsset("prefab", "OutSubwindow"), self.Panel.transform, true):GetComponent("UISubObject")
    subPanel.buttons[0].onClick:AddListener(
        function()
            LotteryCtrl.Panel.images[0].rectTransform.localPosition = CS.UnityEngine.Vector3.zero
            CS.UnityEngine.Object.Destroy(subPanel.gameObject)
        end
    )
    subPanel.tmps[0].text = name
    return subPanel.go[0].transform
end
