EntrepotCtrl = {}
-- 预制体上的UISubObject脚本，内含所有UI对象
EntrepotCtrl.Panel = nil
EntrepotCtrl.EntrepotItems = nil

function EntrepotCtrl:Init()
    print("进入货架")
    local _Obj = LoadManager:Load(ABManager:LoadAsset("prefab", "EntrepotUI"), "UI", true)
    self.Panel = _Obj:GetComponent("UISubObject")
    self.Ani = _Obj:GetComponent("EntrepotAnimation")

    -- 返回按钮
    self.Panel.buttons[0].onClick:AddListener(
        function()
            Core.secondEvent["UpdateEntrepot"] = nil
            self.Ani:EntrepotExitAnimate()
            UICtrl:Back2MainScene()
        end
    )

    -- 仓库按钮
    self.Panel.buttons[1].onClick:AddListener(
        function()
            WarehouseCtrl:ShowWarehouse()
            self.Panel.buttons[0].gameObject:SetActive(false)
            WarehouseCtrl.Panel.buttons[0].gameObject:SetActive(true)
            WarehouseCtrl.Ani:WarehouseEnterAnimate()
        end
    )
    -- 出售记录按钮
    self.Panel.buttons[2].onClick:AddListener(
        function()
            self.Panel.buttons[0].gameObject:SetActive(false)
            RecordsCtrl:ShowRecordsWindow()
        end
    )

    -- 货架按钮失效
    for i=3,18 do
        self.Panel.buttons[i].enabled = false
    end

    -- 加载视图脚本
    LoadManager:LoadLua("Entrepot", "EntrepotView")
    

    -- 加载仓库控制脚本
    LoadManager:LoadLua("Warehouse", "WarehouseCtrl")
    WarehouseCtrl:Init()
    -- 加载记录控制脚本
    LoadManager:LoadLua("Entrepot", "RecordsCtrl")
    RecordsCtrl:Init()

    Core.secondEvent["UpdateEntrepot"] = function() self:UpdateEntrepot() end
end

-- 从动态数据中获取已上架的物品
function EntrepotCtrl:GetEntrepotItems()
    -- 筛选已上架的
    local itemsList = StaticDataModel:ScreenList(PlayerDataModel.CompletePlayerData.Items, "IsOnShelf", 1, "true")
    -- 排序
    StaticDataModel:SortItem(itemsList, "Level", -1)
    return itemsList
end

-- 刷新货架的显示
function EntrepotCtrl:UpdateEntrepot()
    self.EntrepotItems = self:GetEntrepotItems()
    EntrepotView:ShowEntrepotItems(self.EntrepotItems)
end
