RoleCtrl = {}

-- 预制体上的UISubObject脚本，内含所有UI对象
RoleCtrl.Panel = nil

local _CenterHeroIndex = 1
local _LeftHeroIndex = _CenterHeroIndex - 1
local _RightHeroIndex = _CenterHeroIndex + 1

function RoleCtrl:Init()
    print("进入角色管理")
    RoleCtrl.Panel = LoadManager:Load(ABManager:LoadAsset("prefab", "RoleManUI"), "UI", true):GetComponent("UISubObject")

    -- 添加委托
    RoleCtrl.Panel.buttons[0].onClick:AddListener(
        function()
            UICtrl:Back2MainScene()
        end
    )

    -- -- 测试为英雄穿上装备
    -- local heroInfo = ModelTool:CopyTable(PlayerDataModel.CompletePlayerData.Heros[2])
    -- ModelTool:SetMeta(heroInfo)
    -- print(heroInfo)
    -- heroInfo = RoleCtrl:EquipHero(heroInfo,StaticDataModel.ItemsTable[160],1)
    -- heroInfo = RoleCtrl:EquipHero(heroInfo,StaticDataModel.ItemsTable[155],1)
    -- ModelTool:SetMeta(PlayerDataModel.PlayerData.Heros[2])
    -- print(PlayerDataModel.PlayerData.Heros[2])
    -- ModelTool:SetMeta(PlayerDataModel.CompletePlayerData.Heros[2])
    -- print(PlayerDataModel.CompletePlayerData.Heros[2])
    -- ModelTool:SetMeta(heroInfo)
    -- print(heroInfo)
    -- heroInfo.Equips = nil
    -- print(heroInfo)
    -- print(PlayerDataModel.CompletePlayerData.Heros[2])

    -- 测试投喂英雄
    -- local heroInfo = ModelTool:CopyTable(PlayerDataModel.CompletePlayerData.Heros[2])
    -- ModelTool:SetMeta(heroInfo)
    -- print(heroInfo)

    -- heroInfo = RoleCtrl:FeedHero(heroInfo, StaticDataModel.ItemsTable[40])
    -- ModelTool:SetMeta(PlayerDataModel.PlayerData.Heros[2])
    -- print(PlayerDataModel.PlayerData.Heros[2])
    -- ModelTool:SetMeta(PlayerDataModel.CompletePlayerData.Heros[2])
    -- print(PlayerDataModel.CompletePlayerData.Heros[2])
    -- ModelTool:SetMeta(heroInfo)
    -- print(heroInfo)
    -- heroInfo.ColBuffTem = nil
    -- print(heroInfo)
    -- print(PlayerDataModel.CompletePlayerData.Heros[2])
end

function RoleCtrl:LeftChangeHeroClick()
    _RightHeroIndex = _CenterHeroIndex
    _CenterHeroIndex = _LeftHeroIndex
    _LeftHeroIndex = _LeftHeroIndex - 1
    self:ShowHero()
end

function RoleCtrl:RightChangeHeroClick()
    _LeftHeroIndex = _CenterHeroIndex
    _CenterHeroIndex = _RightHeroIndex
    _RightHeroIndex = _RightHeroIndex + 1
    self:ShowHero()
end

function RoleCtrl:ShowHero()
    if _LeftHeroIndex <= 0 then
        _LeftHeroIndex = PlayerDataModel.CompletePlayerData.Heros[#(PlayerDataModel.CompletePlayerData.Heros)]
    end
    if _RightHeroIndex >= #(PlayerDataModel.CompletePlayerData.Heros) then
        _RightHeroIndex = PlayerDataModel.CompletePlayerData.Heros[1]
    end

    -- PlayerDataModel.CompletePlayerData.Heros[_LeftHeroIndex].TexturePath
    -- PlayerDataModel.CompletePlayerData.Heros[_RightHeroIndex].TexturePath

    local _CenterHeroData = PlayerDataModel.CompletePlayerData.Heros[_CenterHeroIndex]
end

--[[
    @desc: 对英雄进行装备操作
    author:{author}
    time:2019-08-08 13:38:10
    --@heroData: 装备信息
	--@itemData: 英雄信息
	--@equipWay: 1/-1 穿上/脱下
    @return: 更改后的新的英雄信息
]]
function RoleCtrl:EquipHero(heroData, itemData, equipWay)
    -- 处理数据：将装备Buff附加给英雄Buff
    local _hbuff = ModelTool:SplitStr(heroData.ColBuff)
    local _ibuff = ModelTool:SplitStr(itemData.HeroBuff)
    _hbuff[1] = _hbuff[1] + (_ibuff[3] * equipWay)
    _hbuff[2] = _hbuff[2] + (_ibuff[4] * equipWay)

    -- 刷新 玩家动态数据 里相应的英雄信息
    for k, v in pairs(PlayerDataModel.PlayerData.Heros) do
        -- 找到相应英雄
        if v.HeroID == heroData.HeroID then
            -- 1.进行装备表的操作
            if equipWay == 1 then
                PlayerDataModel.PlayerData.Heros[k].Equips = ModelTool:MergeStr(PlayerDataModel.PlayerData.Heros[k].Equips, itemData.ItemID)
            elseif equipWay == -1 then
                PlayerDataModel.PlayerData.Heros[k].Equips = ModelTool:RemoveStr(PlayerDataModel.PlayerData.Heros[k].Equips, itemData.ItemID)
            end
            -- 2.赋值给英雄
            v.ColBuff = _hbuff[1] .. "," .. _hbuff[2] .. "," .. _hbuff[3]
            v.EnergyMax = tostring(v.EnergyMax + _ibuff[1])
            break
        end
    end

    -- 刷新 玩家动态完整数据 里相应的英雄信息
    for k, v in pairs(PlayerDataModel.CompletePlayerData.Heros) do
        -- 找到相应英雄
        if v.HeroID == heroData.HeroID then
            -- 1.进行装备表的操作
            if equipWay == 1 then
                --ModelTool:SetMeta(PlayerDataModel.CompletePlayerData.Heros[k].Equips)
                --print(PlayerDataModel.CompletePlayerData.Heros[k].Equips)
                table.insert(PlayerDataModel.CompletePlayerData.Heros[k].Equips, itemData)
            elseif equipWay == -1 then
                PlayerDataModel.CompletePlayerData.Heros[k].Equips = ModelTool:RemoveStr(PlayerDataModel.CompletePlayerData.Heros[k].Equips, tostring(itemData))
            end
            -- 2.赋值给英雄
            v.ColBuff = _hbuff[1] .. "," .. _hbuff[2] .. "," .. _hbuff[3]
            v.EnergyMax = tostring(v.EnergyMax + _ibuff[1])

            -- 返回 刷新传入的信息
            heroData = ModelTool:CopyTable(PlayerDataModel.CompletePlayerData.Heros[k])
            return heroData
        end
    end
end

-- 投喂英雄
function RoleCtrl:FeedHero(heroData, itemData)
    -- 处理数据：将食物Buff附加给英雄Buff
    local _hbuffT = ModelTool:SplitStr(heroData.ColBuffTem)
    local _ibuff = ModelTool:SplitStr(itemData.HeroBuff)
    _hbuffT[1] = _hbuffT[1] + _ibuff[3]
    _hbuffT[2] = _hbuffT[2] + _ibuff[4]

    -- 修改 玩家动态数据 里相应的英雄信息
    for k, v in pairs(PlayerDataModel.PlayerData.Heros) do
        -- 找到相应英雄
        if v.HeroID == heroData.HeroID then
            -- 赋值给英雄
            v.ColBuffTem = _hbuffT[1] .. "," .. _hbuffT[2]
            v.EnergyNow = tostring(v.EnergyNow + _ibuff[2])
            if tonumber(v.EnergyNow) > tonumber(v.EnergyMax) then
                v.EnergyNow = v.EnergyMax
            end
            break
        end
    end

    -- 修改 玩家动态数据 里相应的英雄信息
    for k, v in pairs(PlayerDataModel.CompletePlayerData.Heros) do
        -- 找到相应英雄
        if v.HeroID == heroData.HeroID then
            -- 赋值给英雄
            v.ColBuffTem = _hbuffT[1] .. "," .. _hbuffT[2]
            v.EnergyNow = tostring(v.EnergyNow + _ibuff[2])
            if tonumber(v.EnergyNow) > tonumber(v.EnergyMax) then
                v.EnergyNow = v.EnergyMax
            end

            heroData = ModelTool:CopyTable(PlayerDataModel.CompletePlayerData.Heros[k])
            return heroData
        end
    end
end
