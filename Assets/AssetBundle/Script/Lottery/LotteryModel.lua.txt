LotteryModel = {}

-- 定义概率
LotteryModel.Normal = {}
LotteryModel.NormalPlus = {}
LotteryModel.Diamond = {}
LotteryModel.DiamondPlus = {}

LotteryModel.Normal.price = 1000 -- 普通卡池金币消耗
LotteryModel.Normal.times = 1 -- 抽卡次数
LotteryModel.Normal.roleProbability = 0.2 -- 角色概率
LotteryModel.Normal.L3ItemProbability = 0.2 -- L3道具
LotteryModel.Normal.L2ItemProbability = 0.5 -- L2道具

-- 赋值
LotteryModel.NormalPlus = ModelTool:CopyTable(LotteryModel.Normal)
LotteryModel.NormalPlus.price = 9500
LotteryModel.NormalPlus.times = 10
LotteryModel.Diamond = ModelTool:CopyTable(LotteryModel.Normal)
LotteryModel.Diamond.price = 100 -- 钻石卡池消耗
LotteryModel.DiamondPlus = ModelTool:CopyTable(LotteryModel.Normal)
LotteryModel.DiamondPlus.price = 950
LotteryModel.DiamondPlus.times = 10

-- 扣除资源
function LotteryModel:DeductAsset(type)
    if type == "Normal" then
        PlayerDataModel.PlayerData.Money = string.format("%d", tostring(PlayerDataModel.PlayerData.Money - self.Normal.price))
    elseif type == "Diamond" then
        PlayerDataModel.PlayerData.Diamond = string.format("%d", tostring(PlayerDataModel.PlayerData.Diamond - self.Diamond.price))
    elseif type == "NormalPlus" then
        PlayerDataModel.PlayerData.Money = string.format("%d", tostring(PlayerDataModel.PlayerData.Money - self.NormalPlus.price))
    elseif type == "DiamondPlus" then
        PlayerDataModel.PlayerData.Diamond = string.format("%d", tostring(PlayerDataModel.PlayerData.Diamond - self.DiamondPlus.price))
    else
        print("扣无此卡池类型")
        return
    end
    PlayerDataModel.CompletePlayerData.Money = PlayerDataModel.PlayerData.Money
    PlayerDataModel.CompletePlayerData.Diamond = PlayerDataModel.PlayerData.Diamond
end

-- 查询资源够不够抽
function LotteryModel:Inquire(type)
    if type == "Normal" then
        return PlayerDataModel.PlayerData.Money + 0 >= self.Normal.price
    elseif type == "Diamond" then
        return PlayerDataModel.PlayerData.Diamond + 0 >= self.Diamond.price
    elseif type == "NormalPlus" then
        return PlayerDataModel.PlayerData.Money + 0 >= self.NormalPlus.price
    elseif type == "DiamondPlus" then
        return PlayerDataModel.PlayerData.Diamond + 0 >= self.DiamondPlus.price
    else
        print("查无此卡池类型")
        return false
    end
end

-- 新增角色
function LotteryModel:AddRole(roleData)
    -- HeroID           1               Energy           Energy             ColBuff             0,0                         InsBuff             ""
    --{"HeroID":"3" , "Level":"3" , "EnergyMax":"30" , "EnergyNow":"30" , "ColBuff":"1,1,1" , "ColBuffAdd":"0.1,0.1" , "InsBuff":"3,0.9" , "Equips":""},
    local newRole = {}
    newRole.HeroID = roleData.HeroID
    newRole.Level = "1"
    newRole.EnergyMax = roleData.Energy
    newRole.EnergyNow = roleData.Energy
    newRole.ColBuff = roleData.ColBuff
    newRole.ColBuffAdd = "0,0"
    newRole.InsBuff = roleData.InsBuff
    newRole.Equips = ""
    table.insert(PlayerDataModel.PlayerData.Heros, newRole)
end

-- 抽取道具
function LotteryModel:LotteryProp(type)
    local rand = CS.UnityEngine.Random.value
    local level = "1"
    if rand < self.Normal.L3ItemProbability then
        -- L3道具
        level = "3"
    elseif rand < self.Normal.L2ItemProbability then
        -- L2
        level = "2"
    end

    -- 筛选出对应等级道具，随机取一个
    return StaticDataModel:RandomTable(StaticDataModel:ScreenList(StaticDataModel.ItemsTable, "Level", 1, level))
end
